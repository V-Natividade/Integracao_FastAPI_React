{"ast":null,"code":"var _jsxFileName = \"/frontend/src/components/RegistrationForm/RegistrationForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Actions as authActions, FETCHING_USER_FROM_TOKEN_SUCCESS } from \"../../redux/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { EuiButton, EuiCheckbox, EuiFieldText, EuiForm, EuiFormRow, EuiFieldPassword, EuiSpacer } from \"@elastic/eui\";\nimport { Link } from \"react-router-dom\";\nimport validation from \"../../utils/validation\";\nimport { extractErrorMessages } from \"../../utils/errors\";\nimport { htmlIdGenerator } from \"@elastic/eui/lib/services\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationFormWrapper = styled.div`\n  padding: 2rem;\n`;\n_c = RegistrationFormWrapper;\nconst NeedAccountLink = styled.span`\n  font-size: 0.8rem;\n`;\n_c2 = NeedAccountLink;\n\nfunction RegistrationForm({\n  authError,\n  user,\n  isLoading,\n  isAuthenticated,\n  registerUser\n}) {\n  _s();\n\n  const [form, setForm] = React.useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\"\n  });\n  const [agreedToTerms, setAgreedToTerms] = React.useState(false);\n  const [errors, setErrors] = React.useState({});\n  const [hasSubmitted, setHasSubmitted] = React.useState(false);\n  const navigate = useNavigate();\n  const authErrorList = extractErrorMessages(authError);\n  React.useEffect(() => {\n    if ((user === null || user === void 0 ? void 0 : user.email) && isAuthenticated) {\n      navigate(\"/success\");\n    }\n  }, [user, navigate, isAuthenticated]);\n\n  const validateInput = (label, value) => {\n    var _validation$label;\n\n    // Executa a função de validação na entrada, se existir\n    // Se não existir, assume que a entrada é válida\n    const isValid = (validation === null || validation === void 0 ? void 0 : validation[label]) ? validation === null || validation === void 0 ? void 0 : (_validation$label = validation[label]) === null || _validation$label === void 0 ? void 0 : _validation$label.call(validation, value) : true; // seta um erro se a validação não retornar True\n\n    setErrors(errors => ({ ...errors,\n      [label]: !isValid\n    }));\n  };\n\n  const setAgreedToTermsCheckbox = e => {\n    setAgreedToTerms(e.target.checked);\n  };\n\n  const handleInputChange = (label, value) => {\n    validateInput(label, value);\n    setForm(form => ({ ...form,\n      [label]: value\n    }));\n  };\n\n  const handlePasswordConfirmChange = value => {\n    setErrors(errors => ({ ...errors,\n      passwordConfirm: form.password !== value ? `As senhas não coincidem.` : null\n    }));\n    setForm(form => ({ ...form,\n      passwordConfirm: value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // valida a entrada antes de enviar\n\n    Object.keys(form).forEach(label => validateInput(label, form[label])); // Se alguma entrada não for inserida, retorna um aviso\n\n    if (!Object.values(form).every(value => Boolean(value))) {\n      setErrors(errors => ({ ...errors,\n        form: `Você deve preencher todos os campos`\n      }));\n      return;\n    } // Validação adicional\n\n\n    if (form.password !== form.passwordConfirm) {\n      setErrors(errors => ({ ...errors,\n        form: `As senhas não coincidem`\n      }));\n      return;\n    }\n\n    if (!agreedToTerms) {\n      setErrors(errors => ({ ...errors,\n        form: `Concordo com os termos e condições.`\n      }));\n      return;\n    }\n\n    setHasSubmitted(true);\n    const action = await registerUser({\n      username: form.username,\n      email: form.email,\n      password: form.password\n    });\n\n    if ((action === null || action === void 0 ? void 0 : action.type) !== FETCHING_USER_FROM_TOKEN_SUCCESS) {\n      setForm(form => ({ ...form,\n        password: \"\",\n        passwordConfirm: \"\"\n      }));\n    }\n  };\n\n  const getFormErrors = () => {\n    const formErrors = [];\n\n    if (errors.form) {\n      formErrors.push(errors.form);\n    }\n\n    if (hasSubmitted && authErrorList.length) {\n      return formErrors.concat(authErrorList);\n    }\n\n    return formErrors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(RegistrationFormWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(EuiForm, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      isInvalid: Boolean(getFormErrors().length),\n      error: getFormErrors(),\n      children: [/*#__PURE__*/_jsxDEV(EuiFormRow, {\n        label: \"Email\",\n        helpText: \"Digite seu email\",\n        isInvalid: Boolean(errors.email),\n        error: `Por favor, digite um email válido.`,\n        children: /*#__PURE__*/_jsxDEV(EuiFieldText, {\n          icon: \"email\",\n          placeholder: \"s2i.sub@gmail.com\",\n          value: form.email,\n          onChange: e => handleInputChange(\"email\", e.target.value),\n          \"aria-label\": \"Digite seu email\",\n          isInvalid: Boolean(errors.email)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EuiFormRow, {\n        label: \"Usu\\xE1rio\",\n        helpText: \"Escolha um nome de usu\\xE1rio que contenha apenas letras, n\\xFAmeros, sublinhados e travess\\xF5es.\",\n        isInvalid: Boolean(errors.username),\n        error: `Por favor, insira um nome de usuário válido.`,\n        children: /*#__PURE__*/_jsxDEV(EuiFieldText, {\n          icon: \"user\",\n          placeholder: \"seu_nome\",\n          value: form.username,\n          onChange: e => handleInputChange(\"username\", e.target.value),\n          \"aria-label\": \"Escolha um nome de usu\\xE1rio que contenha apenas letras, n\\xFAmeros, sublinhados e travess\\xF5es.\",\n          isInvalid: Boolean(errors.username)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EuiFormRow, {\n        label: \"Senha\",\n        helpText: \"Digite sua senha.\",\n        isInvalid: Boolean(errors.password),\n        error: `A senha deve ter no mínimo 7 caracteres`,\n        children: /*#__PURE__*/_jsxDEV(EuiFieldPassword, {\n          placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n          value: form.password,\n          onChange: e => handleInputChange(\"password\", e.target.value),\n          type: \"dual\",\n          \"aria-label\": \"Digite sua senha.\",\n          isInvalid: Boolean(errors.password)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EuiFormRow, {\n        label: \"Confirme a senha\",\n        helpText: \"Confirme a senha.\",\n        isInvalid: Boolean(errors.passwordConfirm),\n        error: `As senha não coincidem.`,\n        children: /*#__PURE__*/_jsxDEV(EuiFieldPassword, {\n          placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n          value: form.passwordConfirm,\n          onChange: e => handlePasswordConfirmChange(e.target.value),\n          type: \"dual\",\n          \"aria-label\": \"Confirme a senha.\",\n          isInvalid: Boolean(errors.passwordConfirm)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EuiSpacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EuiCheckbox, {\n        id: htmlIdGenerator()(),\n        label: \"Eu aceito os termos e condi\\xE7\\xF5es.\",\n        checked: agreedToTerms,\n        onChange: e => setAgreedToTermsCheckbox(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EuiSpacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EuiButton, {\n        type: \"submit\",\n        isLoading: isLoading,\n        fill: true,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EuiSpacer, {\n      size: \"xl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NeedAccountLink, {\n      children: [\"J\\xE1 possui uma conta? Acesse \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"aqui\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 37\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegistrationForm, \"BQnFxZn0smjYGUNk458QsswADws=\", false, function () {\n  return [useNavigate];\n});\n\n_c3 = RegistrationForm;\nexport default connect(state => ({\n  authError: state.auth.error,\n  isLoading: state.auth.isLoading,\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n}), {\n  registerUser: authActions.registerNewUser\n})(RegistrationForm);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RegistrationFormWrapper\");\n$RefreshReg$(_c2, \"NeedAccountLink\");\n$RefreshReg$(_c3, \"RegistrationForm\");","map":{"version":3,"sources":["/frontend/src/components/RegistrationForm/RegistrationForm.js"],"names":["React","connect","Actions","authActions","FETCHING_USER_FROM_TOKEN_SUCCESS","useNavigate","EuiButton","EuiCheckbox","EuiFieldText","EuiForm","EuiFormRow","EuiFieldPassword","EuiSpacer","Link","validation","extractErrorMessages","htmlIdGenerator","styled","RegistrationFormWrapper","div","NeedAccountLink","span","RegistrationForm","authError","user","isLoading","isAuthenticated","registerUser","form","setForm","useState","username","email","password","passwordConfirm","agreedToTerms","setAgreedToTerms","errors","setErrors","hasSubmitted","setHasSubmitted","navigate","authErrorList","useEffect","validateInput","label","value","isValid","setAgreedToTermsCheckbox","e","target","checked","handleInputChange","handlePasswordConfirmChange","handleSubmit","preventDefault","Object","keys","forEach","values","every","Boolean","action","type","getFormErrors","formErrors","push","length","concat","state","auth","error","registerNewUser"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,OAAO,IAAIC,WADb,EAEEC,gCAFF,QAGO,kBAHP;AAIA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SACEC,SADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,OAJF,EAKEC,UALF,EAMEC,gBANF,EAOEC,SAPF,QAQO,cARP;AASA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,oBAAT,QAAqC,oBAArC;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,uBAAuB,GAAGD,MAAM,CAACE,GAAI;AAC3C;AACA,CAFA;KAAMD,uB;AAGN,MAAME,eAAe,GAAGH,MAAM,CAACI,IAAK;AACpC;AACA,CAFA;MAAMD,e;;AAIN,SAASE,gBAAT,CAA0B;AACxBC,EAAAA,SADwB;AAExBC,EAAAA,IAFwB;AAGxBC,EAAAA,SAHwB;AAIxBC,EAAAA,eAJwB;AAKxBC,EAAAA;AALwB,CAA1B,EAMG;AAAA;;AACD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB7B,KAAK,CAAC8B,QAAN,CAAe;AACrCC,IAAAA,QAAQ,EAAE,EAD2B;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,QAAQ,EAAE,EAH2B;AAIrCC,IAAAA,eAAe,EAAE;AAJoB,GAAf,CAAxB;AAMA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCpC,KAAK,CAAC8B,QAAN,CAAe,KAAf,CAA1C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBtC,KAAK,CAAC8B,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCxC,KAAK,CAAC8B,QAAN,CAAe,KAAf,CAAxC;AACA,QAAMW,QAAQ,GAAGpC,WAAW,EAA5B;AACA,QAAMqC,aAAa,GAAG3B,oBAAoB,CAACQ,SAAD,CAA1C;AAEAvB,EAAAA,KAAK,CAAC2C,SAAN,CAAgB,MAAM;AACpB,QAAI,CAAAnB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEQ,KAAN,KAAeN,eAAnB,EAAoC;AAClCe,MAAAA,QAAQ,CAAC,UAAD,CAAR;AACD;AACF,GAJD,EAIG,CAACjB,IAAD,EAAOiB,QAAP,EAAiBf,eAAjB,CAJH;;AAMA,QAAMkB,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAAA;;AACtC;AACA;AACA,UAAMC,OAAO,GAAG,CAAAjC,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAG+B,KAAH,CAAV,IAAsB/B,UAAtB,aAAsBA,UAAtB,4CAAsBA,UAAU,CAAG+B,KAAH,CAAhC,sDAAsB,uBAAA/B,UAAU,EAAYgC,KAAZ,CAAhC,GAAqD,IAArE,CAHsC,CAItC;;AACAR,IAAAA,SAAS,CAAED,MAAD,KAAa,EAAE,GAAGA,MAAL;AAAa,OAACQ,KAAD,GAAS,CAACE;AAAvB,KAAb,CAAD,CAAT;AACD,GAND;;AAQA,QAAMC,wBAAwB,GAAIC,CAAD,IAAO;AACtCb,IAAAA,gBAAgB,CAACa,CAAC,CAACC,MAAF,CAASC,OAAV,CAAhB;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAG,CAACP,KAAD,EAAQC,KAAR,KAAkB;AAC1CF,IAAAA,aAAa,CAACC,KAAD,EAAQC,KAAR,CAAb;AAEAjB,IAAAA,OAAO,CAAED,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAW,OAACiB,KAAD,GAASC;AAApB,KAAX,CAAD,CAAP;AACD,GAJD;;AAMA,QAAMO,2BAA2B,GAAIP,KAAD,IAAW;AAC7CR,IAAAA,SAAS,CAAED,MAAD,KAAa,EACrB,GAAGA,MADkB;AAErBH,MAAAA,eAAe,EACbN,IAAI,CAACK,QAAL,KAAkBa,KAAlB,GAA2B,0BAA3B,GAAuD;AAHpC,KAAb,CAAD,CAAT;AAMAjB,IAAAA,OAAO,CAAED,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWM,MAAAA,eAAe,EAAEY;AAA5B,KAAX,CAAD,CAAP;AACD,GARD;;AAUA,QAAMQ,YAAY,GAAG,MAAOL,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACM,cAAF,GADgC,CAGhC;;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAY7B,IAAZ,EAAkB8B,OAAlB,CAA2Bb,KAAD,IAAWD,aAAa,CAACC,KAAD,EAAQjB,IAAI,CAACiB,KAAD,CAAZ,CAAlD,EAJgC,CAKhC;;AACA,QAAI,CAACW,MAAM,CAACG,MAAP,CAAc/B,IAAd,EAAoBgC,KAApB,CAA2Bd,KAAD,IAAWe,OAAO,CAACf,KAAD,CAA5C,CAAL,EAA2D;AACzDR,MAAAA,SAAS,CAAED,MAAD,KAAa,EACrB,GAAGA,MADkB;AAErBT,QAAAA,IAAI,EAAG;AAFc,OAAb,CAAD,CAAT;AAIA;AACD,KAZ+B,CAchC;;;AACA,QAAIA,IAAI,CAACK,QAAL,KAAkBL,IAAI,CAACM,eAA3B,EAA4C;AAC1CI,MAAAA,SAAS,CAAED,MAAD,KAAa,EAAE,GAAGA,MAAL;AAAaT,QAAAA,IAAI,EAAG;AAApB,OAAb,CAAD,CAAT;AACA;AACD;;AAED,QAAI,CAACO,aAAL,EAAoB;AAClBG,MAAAA,SAAS,CAAED,MAAD,KAAa,EACrB,GAAGA,MADkB;AAErBT,QAAAA,IAAI,EAAG;AAFc,OAAb,CAAD,CAAT;AAIA;AACD;;AAEDY,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA,UAAMsB,MAAM,GAAG,MAAMnC,YAAY,CAAC;AAChCI,MAAAA,QAAQ,EAAEH,IAAI,CAACG,QADiB;AAEhCC,MAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFoB;AAGhCC,MAAAA,QAAQ,EAAEL,IAAI,CAACK;AAHiB,KAAD,CAAjC;;AAKA,QAAI,CAAA6B,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEC,IAAR,MAAiB3D,gCAArB,EAAuD;AACrDyB,MAAAA,OAAO,CAAED,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWK,QAAAA,QAAQ,EAAE,EAArB;AAAyBC,QAAAA,eAAe,EAAE;AAA1C,OAAX,CAAD,CAAP;AACD;AACF,GArCD;;AAuCA,QAAM8B,aAAa,GAAG,MAAM;AAC1B,UAAMC,UAAU,GAAG,EAAnB;;AAEA,QAAI5B,MAAM,CAACT,IAAX,EAAiB;AACfqC,MAAAA,UAAU,CAACC,IAAX,CAAgB7B,MAAM,CAACT,IAAvB;AACD;;AAED,QAAIW,YAAY,IAAIG,aAAa,CAACyB,MAAlC,EAA0C;AACxC,aAAOF,UAAU,CAACG,MAAX,CAAkB1B,aAAlB,CAAP;AACD;;AAED,WAAOuB,UAAP;AACD,GAZD;;AAcA,sBACE,QAAC,uBAAD;AAAA,4BACE,QAAC,OAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,QAAQ,EAAEX,YAFZ;AAGE,MAAA,SAAS,EAAEO,OAAO,CAACG,aAAa,GAAGG,MAAjB,CAHpB;AAIE,MAAA,KAAK,EAAEH,aAAa,EAJtB;AAAA,8BAME,QAAC,UAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,QAAQ,EAAC,kBAFX;AAGE,QAAA,SAAS,EAAEH,OAAO,CAACxB,MAAM,CAACL,KAAR,CAHpB;AAIE,QAAA,KAAK,EAAG,oCAJV;AAAA,+BAME,QAAC,YAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,WAAW,EAAC,mBAFd;AAGE,UAAA,KAAK,EAAEJ,IAAI,CAACI,KAHd;AAIE,UAAA,QAAQ,EAAGiB,CAAD,IAAOG,iBAAiB,CAAC,OAAD,EAAUH,CAAC,CAACC,MAAF,CAASJ,KAAnB,CAJpC;AAKE,wBAAW,kBALb;AAME,UAAA,SAAS,EAAEe,OAAO,CAACxB,MAAM,CAACL,KAAR;AANpB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cANF,eAsBE,QAAC,UAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,QAAQ,EAAC,oGAFX;AAGE,QAAA,SAAS,EAAE6B,OAAO,CAACxB,MAAM,CAACN,QAAR,CAHpB;AAIE,QAAA,KAAK,EAAG,8CAJV;AAAA,+BAME,QAAC,YAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,UAFd;AAGE,UAAA,KAAK,EAAEH,IAAI,CAACG,QAHd;AAIE,UAAA,QAAQ,EAAGkB,CAAD,IAAOG,iBAAiB,CAAC,UAAD,EAAaH,CAAC,CAACC,MAAF,CAASJ,KAAtB,CAJpC;AAKE,wBAAW,oGALb;AAME,UAAA,SAAS,EAAEe,OAAO,CAACxB,MAAM,CAACN,QAAR;AANpB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAtBF,eAsCE,QAAC,UAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,QAAQ,EAAC,mBAFX;AAGE,QAAA,SAAS,EAAE8B,OAAO,CAACxB,MAAM,CAACJ,QAAR,CAHpB;AAIE,QAAA,KAAK,EAAG,yCAJV;AAAA,+BAME,QAAC,gBAAD;AACE,UAAA,WAAW,EAAC,0EADd;AAEE,UAAA,KAAK,EAAEL,IAAI,CAACK,QAFd;AAGE,UAAA,QAAQ,EAAGgB,CAAD,IAAOG,iBAAiB,CAAC,UAAD,EAAaH,CAAC,CAACC,MAAF,CAASJ,KAAtB,CAHpC;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,wBAAW,mBALb;AAME,UAAA,SAAS,EAAEe,OAAO,CAACxB,MAAM,CAACJ,QAAR;AANpB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAtCF,eAqDE,QAAC,UAAD;AACE,QAAA,KAAK,EAAC,kBADR;AAEE,QAAA,QAAQ,EAAC,mBAFX;AAGE,QAAA,SAAS,EAAE4B,OAAO,CAACxB,MAAM,CAACH,eAAR,CAHpB;AAIE,QAAA,KAAK,EAAG,yBAJV;AAAA,+BAME,QAAC,gBAAD;AACE,UAAA,WAAW,EAAC,0EADd;AAEE,UAAA,KAAK,EAAEN,IAAI,CAACM,eAFd;AAGE,UAAA,QAAQ,EAAGe,CAAD,IAAOI,2BAA2B,CAACJ,CAAC,CAACC,MAAF,CAASJ,KAAV,CAH9C;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,wBAAW,mBALb;AAME,UAAA,SAAS,EAAEe,OAAO,CAACxB,MAAM,CAACH,eAAR;AANpB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cArDF,eAoEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cApEF,eAqEE,QAAC,WAAD;AACE,QAAA,EAAE,EAAElB,eAAe,IADrB;AAEE,QAAA,KAAK,EAAC,wCAFR;AAGE,QAAA,OAAO,EAAEmB,aAHX;AAIE,QAAA,QAAQ,EAAGc,CAAD,IAAOD,wBAAwB,CAACC,CAAD;AAJ3C;AAAA;AAAA;AAAA;AAAA,cArEF,eA2EE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cA3EF,eA4EE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,QAAhB;AAAyB,QAAA,SAAS,EAAExB,SAApC;AAA+C,QAAA,IAAI,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5EF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkFE,QAAC,SAAD;AAAW,MAAA,IAAI,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAlFF,eAoFE,QAAC,eAAD;AAAA,iEAC8B,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,YApFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0FD;;GApMQH,gB;UAgBUjB,W;;;MAhBViB,gB;AAsMT,eAAerB,OAAO,CACnBoE,KAAD,KAAY;AACV9C,EAAAA,SAAS,EAAE8C,KAAK,CAACC,IAAN,CAAWC,KADZ;AAEV9C,EAAAA,SAAS,EAAE4C,KAAK,CAACC,IAAN,CAAW7C,SAFZ;AAGVC,EAAAA,eAAe,EAAE2C,KAAK,CAACC,IAAN,CAAW5C,eAHlB;AAIVF,EAAAA,IAAI,EAAE6C,KAAK,CAACC,IAAN,CAAW9C;AAJP,CAAZ,CADoB,EAOpB;AACEG,EAAAA,YAAY,EAAExB,WAAW,CAACqE;AAD5B,CAPoB,CAAP,CAUblD,gBAVa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Actions as authActions,\n  FETCHING_USER_FROM_TOKEN_SUCCESS,\n} from \"../../redux/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  EuiButton,\n  EuiCheckbox,\n  EuiFieldText,\n  EuiForm,\n  EuiFormRow,\n  EuiFieldPassword,\n  EuiSpacer,\n} from \"@elastic/eui\";\nimport { Link } from \"react-router-dom\";\nimport validation from \"../../utils/validation\";\nimport { extractErrorMessages } from \"../../utils/errors\";\nimport { htmlIdGenerator } from \"@elastic/eui/lib/services\";\nimport styled from \"styled-components\";\n\nconst RegistrationFormWrapper = styled.div`\n  padding: 2rem;\n`;\nconst NeedAccountLink = styled.span`\n  font-size: 0.8rem;\n`;\n\nfunction RegistrationForm({\n  authError,\n  user,\n  isLoading,\n  isAuthenticated,\n  registerUser,\n}) {\n  const [form, setForm] = React.useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n  });\n  const [agreedToTerms, setAgreedToTerms] = React.useState(false);\n  const [errors, setErrors] = React.useState({});\n  const [hasSubmitted, setHasSubmitted] = React.useState(false);\n  const navigate = useNavigate();\n  const authErrorList = extractErrorMessages(authError);\n\n  React.useEffect(() => {\n    if (user?.email && isAuthenticated) {\n      navigate(\"/success\");\n    }\n  }, [user, navigate, isAuthenticated]);\n\n  const validateInput = (label, value) => {\n    // Executa a função de validação na entrada, se existir\n    // Se não existir, assume que a entrada é válida\n    const isValid = validation?.[label] ? validation?.[label]?.(value) : true;\n    // seta um erro se a validação não retornar True\n    setErrors((errors) => ({ ...errors, [label]: !isValid }));\n  };\n\n  const setAgreedToTermsCheckbox = (e) => {\n    setAgreedToTerms(e.target.checked);\n  };\n\n  const handleInputChange = (label, value) => {\n    validateInput(label, value);\n\n    setForm((form) => ({ ...form, [label]: value }));\n  };\n\n  const handlePasswordConfirmChange = (value) => {\n    setErrors((errors) => ({\n      ...errors,\n      passwordConfirm:\n        form.password !== value ? `As senhas não coincidem.` : null,\n    }));\n\n    setForm((form) => ({ ...form, passwordConfirm: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // valida a entrada antes de enviar\n    Object.keys(form).forEach((label) => validateInput(label, form[label]));\n    // Se alguma entrada não for inserida, retorna um aviso\n    if (!Object.values(form).every((value) => Boolean(value))) {\n      setErrors((errors) => ({\n        ...errors,\n        form: `Você deve preencher todos os campos`,\n      }));\n      return;\n    }\n\n    // Validação adicional\n    if (form.password !== form.passwordConfirm) {\n      setErrors((errors) => ({ ...errors, form: `As senhas não coincidem` }));\n      return;\n    }\n\n    if (!agreedToTerms) {\n      setErrors((errors) => ({\n        ...errors,\n        form: `Concordo com os termos e condições.`,\n      }));\n      return;\n    }\n\n    setHasSubmitted(true);\n    const action = await registerUser({\n      username: form.username,\n      email: form.email,\n      password: form.password,\n    });\n    if (action?.type !== FETCHING_USER_FROM_TOKEN_SUCCESS) {\n      setForm((form) => ({ ...form, password: \"\", passwordConfirm: \"\" }));\n    }\n  };\n\n  const getFormErrors = () => {\n    const formErrors = [];\n\n    if (errors.form) {\n      formErrors.push(errors.form);\n    }\n\n    if (hasSubmitted && authErrorList.length) {\n      return formErrors.concat(authErrorList);\n    }\n\n    return formErrors;\n  };\n\n  return (\n    <RegistrationFormWrapper>\n      <EuiForm\n        component=\"form\"\n        onSubmit={handleSubmit}\n        isInvalid={Boolean(getFormErrors().length)}\n        error={getFormErrors()}\n      >\n        <EuiFormRow\n          label=\"Email\"\n          helpText=\"Digite seu email\"\n          isInvalid={Boolean(errors.email)}\n          error={`Por favor, digite um email válido.`}\n        >\n          <EuiFieldText\n            icon=\"email\"\n            placeholder=\"s2i.sub@gmail.com\"\n            value={form.email}\n            onChange={(e) => handleInputChange(\"email\", e.target.value)}\n            aria-label=\"Digite seu email\"\n            isInvalid={Boolean(errors.email)}\n          />\n        </EuiFormRow>\n\n        <EuiFormRow\n          label=\"Usuário\"\n          helpText=\"Escolha um nome de usuário que contenha apenas letras, números, sublinhados e travessões.\"\n          isInvalid={Boolean(errors.username)}\n          error={`Por favor, insira um nome de usuário válido.`}\n        >\n          <EuiFieldText\n            icon=\"user\"\n            placeholder=\"seu_nome\"\n            value={form.username}\n            onChange={(e) => handleInputChange(\"username\", e.target.value)}\n            aria-label=\"Escolha um nome de usuário que contenha apenas letras, números, sublinhados e travessões.\"\n            isInvalid={Boolean(errors.username)}\n          />\n        </EuiFormRow>\n\n        <EuiFormRow\n          label=\"Senha\"\n          helpText=\"Digite sua senha.\"\n          isInvalid={Boolean(errors.password)}\n          error={`A senha deve ter no mínimo 7 caracteres`}\n        >\n          <EuiFieldPassword\n            placeholder=\"••••••••••••\"\n            value={form.password}\n            onChange={(e) => handleInputChange(\"password\", e.target.value)}\n            type=\"dual\"\n            aria-label=\"Digite sua senha.\"\n            isInvalid={Boolean(errors.password)}\n          />\n        </EuiFormRow>\n        <EuiFormRow\n          label=\"Confirme a senha\"\n          helpText=\"Confirme a senha.\"\n          isInvalid={Boolean(errors.passwordConfirm)}\n          error={`As senha não coincidem.`}\n        >\n          <EuiFieldPassword\n            placeholder=\"••••••••••••\"\n            value={form.passwordConfirm}\n            onChange={(e) => handlePasswordConfirmChange(e.target.value)}\n            type=\"dual\"\n            aria-label=\"Confirme a senha.\"\n            isInvalid={Boolean(errors.passwordConfirm)}\n          />\n        </EuiFormRow>\n        <EuiSpacer />\n        <EuiCheckbox\n          id={htmlIdGenerator()()}\n          label=\"Eu aceito os termos e condições.\"\n          checked={agreedToTerms}\n          onChange={(e) => setAgreedToTermsCheckbox(e)}\n        />\n        <EuiSpacer />\n        <EuiButton type=\"submit\" isLoading={isLoading} fill>\n          Enviar\n        </EuiButton>\n      </EuiForm>\n\n      <EuiSpacer size=\"xl\" />\n\n      <NeedAccountLink>\n        Já possui uma conta? Acesse <Link to=\"/\">aqui</Link>.\n      </NeedAccountLink>\n    </RegistrationFormWrapper>\n  );\n}\n\nexport default connect(\n  (state) => ({\n    authError: state.auth.error,\n    isLoading: state.auth.isLoading,\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user,\n  }),\n  {\n    registerUser: authActions.registerNewUser,\n  }\n)(RegistrationForm);\n"]},"metadata":{},"sourceType":"module"}