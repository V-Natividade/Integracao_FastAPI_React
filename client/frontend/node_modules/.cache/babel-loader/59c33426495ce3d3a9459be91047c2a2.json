{"ast":null,"code":"/**\n * Formata as URLs da API\n *\n * @param {String} base - string da url que representa o endpoint sem parâmetros\n * @param {Object} params - parâmetros de consulta para formatar e add ao final da url\n */\nexport const formatURLWithQueryParams = (base, params) => {\n  var _Object$keys;\n\n  if (!params || ((_Object$keys = Object.keys(params)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) === 0) return base;\n  const query = Object.entries(params).map(([key, value]) => `${key}=${encodeURIComponent(value)}`).join(\"&\");\n  return `${base}?${query}`;\n};\n/**\n * Formata o path\n *\n * @param {String} path\n */\n\nexport const formatAPIPath = path => {\n  let adjustedPath = path; // add as barrar no caminho\n\n  if (adjustedPath.charAt(0) !== \"/\") {\n    adjustedPath = \"/\" + adjustedPath;\n  }\n\n  if (adjustedPath.charAt(adjustedPath.length - 1) !== \"/\") {\n    adjustedPath = adjustedPath + \"/\";\n  }\n\n  return adjustedPath;\n};\n/**\n * Formata as URLs da API\n *\n * @param {String} url - representa o caminho do endpoint\n * @param {Object} params - parâmetros de consulta que serão formatados ao final da url\n */\n\nexport const formatURL = (url, params) => {\n  const endpointPath = formatAPIPath(url);\n  const baseUrl = \"http://localhost:8000/api\";\n  const fullURL = `${baseUrl}${endpointPath}`;\n  return formatURLWithQueryParams(fullURL, params);\n};","map":{"version":3,"sources":["/home/vln/Área de Trabalho/projetos/s2isub/certi_s2i.sub-pocs/consumo_api/frontend/frontend/src/utils/urls.js"],"names":["formatURLWithQueryParams","base","params","Object","keys","length","query","entries","map","key","value","encodeURIComponent","join","formatAPIPath","path","adjustedPath","charAt","formatURL","url","endpointPath","baseUrl","fullURL"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,wBAAwB,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAAA;;AACxD,MAAI,CAACA,MAAD,IAAW,iBAAAC,MAAM,CAACC,IAAP,CAAYF,MAAZ,+DAAqBG,MAArB,MAAgC,CAA/C,EAAkD,OAAOJ,IAAP;AAElD,QAAMK,KAAK,GAAGH,MAAM,CAACI,OAAP,CAAeL,MAAf,EACXM,GADW,CACP,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAmB,GAAED,GAAI,IAAGE,kBAAkB,CAACD,KAAD,CAAQ,EAD/C,EAEXE,IAFW,CAEN,GAFM,CAAd;AAIA,SAAQ,GAAEX,IAAK,IAAGK,KAAM,EAAxB;AACD,CARM;AAUP;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMO,aAAa,GAAIC,IAAD,IAAU;AACrC,MAAIC,YAAY,GAAGD,IAAnB,CADqC,CAGrC;;AACA,MAAIC,YAAY,CAACC,MAAb,CAAoB,CAApB,MAA2B,GAA/B,EAAoC;AAClCD,IAAAA,YAAY,GAAG,MAAMA,YAArB;AACD;;AACD,MAAIA,YAAY,CAACC,MAAb,CAAoBD,YAAY,CAACV,MAAb,GAAsB,CAA1C,MAAiD,GAArD,EAA0D;AACxDU,IAAAA,YAAY,GAAGA,YAAY,GAAG,GAA9B;AACD;;AAED,SAAOA,YAAP;AACD,CAZM;AAcP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAME,SAAS,GAAG,CAACC,GAAD,EAAMhB,MAAN,KAAiB;AACxC,QAAMiB,YAAY,GAAGN,aAAa,CAACK,GAAD,CAAlC;AAEA,QAAME,OAAO,GAAG,2BAAhB;AAEA,QAAMC,OAAO,GAAI,GAAED,OAAQ,GAAED,YAAa,EAA1C;AAEA,SAAOnB,wBAAwB,CAACqB,OAAD,EAAUnB,MAAV,CAA/B;AACD,CARM","sourcesContent":["/**\n * Formata as URLs da API\n *\n * @param {String} base - string da url que representa o endpoint sem parâmetros\n * @param {Object} params - parâmetros de consulta para formatar e add ao final da url\n */\nexport const formatURLWithQueryParams = (base, params) => {\n  if (!params || Object.keys(params)?.length === 0) return base;\n\n  const query = Object.entries(params)\n    .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n    .join(\"&\");\n\n  return `${base}?${query}`;\n};\n\n/**\n * Formata o path\n *\n * @param {String} path\n */\nexport const formatAPIPath = (path) => {\n  let adjustedPath = path;\n\n  // add as barrar no caminho\n  if (adjustedPath.charAt(0) !== \"/\") {\n    adjustedPath = \"/\" + adjustedPath;\n  }\n  if (adjustedPath.charAt(adjustedPath.length - 1) !== \"/\") {\n    adjustedPath = adjustedPath + \"/\";\n  }\n\n  return adjustedPath;\n};\n\n/**\n * Formata as URLs da API\n *\n * @param {String} url - representa o caminho do endpoint\n * @param {Object} params - parâmetros de consulta que serão formatados ao final da url\n */\nexport const formatURL = (url, params) => {\n  const endpointPath = formatAPIPath(url);\n\n  const baseUrl = \"http://localhost:8000/api\";\n\n  const fullURL = `${baseUrl}${endpointPath}`;\n\n  return formatURLWithQueryParams(fullURL, params);\n};\n"]},"metadata":{},"sourceType":"module"}