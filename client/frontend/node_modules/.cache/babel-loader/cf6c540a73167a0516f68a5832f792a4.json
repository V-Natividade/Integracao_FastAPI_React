{"ast":null,"code":"import initialState from \"./initialState\";\nimport apiClient from \"../services/apiClient\";\nimport axios from \"axios\";\nexport const REQUEST_LOGIN = \"@@auth/REQUEST_LOGIN\";\nexport const REQUEST_LOGIN_FAILURE = \"@@auth/REQUEST_LOGIN_FAILURE\";\nexport const REQUEST_LOGIN_SUCCESS = \"@@auth/REQUEST_LOGIN_SUCCESS\";\nexport const REQUEST_LOG_USER_OUT = \"@@auth/REQUEST_LOG_USER_OUT\";\nexport const REQUEST_USER_SIGN_UP = \"@@auth/REQUEST_USER_SIGN_UP\";\nexport const REQUEST_USER_SIGN_UP_SUCCESS = \"@@auth/REQUEST_USER_SIGN_UP_SUCCESS\";\nexport const REQUEST_USER_SIGN_UP_FAILURE = \"@@auth/REQUEST_USER_SIGN_UP_FAILURE\";\nexport const FETCHING_USER_FROM_TOKEN = \"@@auth/FETCHING_USER_FROM_TOKEN\";\nexport const FETCHING_USER_FROM_TOKEN_SUCCESS = \"@@auth/FETCHING_USER_FROM_TOKEN_SUCCESS\";\nexport const FETCHING_USER_FROM_TOKEN_FAILURE = \"@@auth/FETCHING_USER_FROM_TOKEN_FAILURE\";\nexport default function authReducer(state = initialState.auth, action = {}) {\n  switch (action.type) {\n    case REQUEST_LOGIN:\n      return { ...state,\n        isLoading: true\n      };\n\n    case REQUEST_LOGIN_FAILURE:\n      return { ...state,\n        isLoading: false,\n        error: action.error,\n        user: {}\n      };\n\n    case REQUEST_LOGIN_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        error: null\n      };\n\n    case REQUEST_USER_SIGN_UP:\n      return { ...state,\n        isLoading: true\n      };\n\n    case REQUEST_USER_SIGN_UP_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        error: null\n      };\n\n    case REQUEST_USER_SIGN_UP_FAILURE:\n      return { ...state,\n        isLoading: false,\n        isAuthenticated: false,\n        error: action.error\n      };\n\n    case FETCHING_USER_FROM_TOKEN:\n      return { ...state,\n        isLoading: true\n      };\n\n    case FETCHING_USER_FROM_TOKEN_SUCCESS:\n      return { ...state,\n        isAuthenticated: true,\n        userLoaded: true,\n        isLoading: false,\n        user: action.data\n      };\n\n    case FETCHING_USER_FROM_TOKEN_FAILURE:\n      return { ...state,\n        isAuthenticated: false,\n        userLoaded: true,\n        isLoading: false,\n        error: action.error,\n        user: {}\n      };\n\n    case REQUEST_LOG_USER_OUT:\n      return { ...initialState.auth\n      };\n\n    default:\n      return state;\n  }\n}\nexport const Actions = {};\n\nActions.requestUserLogin = ({\n  email,\n  password\n}) => {\n  return dispatch => dispatch(apiClient({\n    url: `/users/login/token/`,\n    method: `POST`,\n    types: {\n      REQUEST: REQUEST_USER_SIGN_UP,\n      SUCCESS: REQUEST_USER_SIGN_UP_SUCCESS,\n      FAILURE: REQUEST_USER_SIGN_UP_FAILURE\n    },\n    options: {\n      data: {\n        user: {\n          email,\n          password\n        }\n      },\n      params: {}\n    },\n    onSuccess: res => {\n      var _res$data, _res$data$access_toke;\n\n      // esconde o access_token que o servidor retorna\n      const access_token = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$access_toke = _res$data.access_token) === null || _res$data$access_toke === void 0 ? void 0 : _res$data$access_toke.access_token;\n      localStorage.setItem(\"access_token\", access_token);\n      return dispatch(Actions.fetchUserFromToken(access_token));\n    },\n    onFailure: res => ({\n      success: false,\n      status: res.status,\n      error: res.error\n    })\n  }));\n};\n\nActions.registerNewUser = ({\n  username,\n  email,\n  password\n}) => {\n  return dispatch => dispatch(apiClient({\n    url: `/users/`,\n    method: `POST`,\n    types: {\n      REQUEST: REQUEST_USER_SIGN_UP,\n      SUCCESS: REQUEST_USER_SIGN_UP_SUCCESS,\n      FAILURE: REQUEST_USER_SIGN_UP_FAILURE\n    },\n    options: {\n      data: {\n        new_user: {\n          username,\n          email,\n          password\n        }\n      },\n      params: {}\n    },\n    onSuccess: res => {\n      var _res$data2, _res$data2$access_tok;\n\n      // esconde o access_token que o servidor retorna\n      const access_token = res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : (_res$data2$access_tok = _res$data2.access_token) === null || _res$data2$access_tok === void 0 ? void 0 : _res$data2$access_tok.access_token;\n      localStorage.setItem(\"access_token\", access_token);\n      return dispatch(Actions.fetchUserFromToken(access_token));\n    },\n    onFailure: res => ({\n      success: false,\n      status: res.status,\n      error: res.error\n    })\n  }));\n};\n\nActions.fetchUserFromToken = access_token => {\n  return async dispatch => {\n    dispatch({\n      type: FETCHING_USER_FROM_TOKEN\n    });\n    const token = access_token ? access_token : localStorage.getItem(\"access_token\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    };\n\n    try {\n      const res = await axios({\n        method: `GET`,\n        url: `http://localhost:8000/api/users/me/`,\n        headers\n      });\n      console.log(res);\n      return dispatch({\n        type: FETCHING_USER_FROM_TOKEN_SUCCESS,\n        data: res.data\n      });\n    } catch (error) {\n      console.log(error);\n      return dispatch({\n        type: FETCHING_USER_FROM_TOKEN_FAILURE,\n        error: error.message\n      });\n    }\n  };\n};\n\nActions.logUserOut = () => {\n  localStorage.removeItem(\"access_token\");\n  return {\n    type: REQUEST_LOG_USER_OUT\n  };\n};","map":{"version":3,"sources":["/home/vln/√Årea de Trabalho/projetos/s2isub/certi_s2i.sub-pocs/consumo_api/frontend/frontend/src/redux/auth.js"],"names":["initialState","apiClient","axios","REQUEST_LOGIN","REQUEST_LOGIN_FAILURE","REQUEST_LOGIN_SUCCESS","REQUEST_LOG_USER_OUT","REQUEST_USER_SIGN_UP","REQUEST_USER_SIGN_UP_SUCCESS","REQUEST_USER_SIGN_UP_FAILURE","FETCHING_USER_FROM_TOKEN","FETCHING_USER_FROM_TOKEN_SUCCESS","FETCHING_USER_FROM_TOKEN_FAILURE","authReducer","state","auth","action","type","isLoading","error","user","isAuthenticated","userLoaded","data","Actions","requestUserLogin","email","password","dispatch","url","method","types","REQUEST","SUCCESS","FAILURE","options","params","onSuccess","res","access_token","localStorage","setItem","fetchUserFromToken","onFailure","success","status","registerNewUser","username","new_user","token","getItem","headers","Authorization","console","log","message","logUserOut","removeItem"],"mappings":"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","sourcesContent":["import initialState from \"./initialState\";\nimport apiClient from \"../services/apiClient\";\nimport axios from \"axios\";\n\nexport const REQUEST_LOGIN = \"@@auth/REQUEST_LOGIN\";\nexport const REQUEST_LOGIN_FAILURE = \"@@auth/REQUEST_LOGIN_FAILURE\";\nexport const REQUEST_LOGIN_SUCCESS = \"@@auth/REQUEST_LOGIN_SUCCESS\";\nexport const REQUEST_LOG_USER_OUT = \"@@auth/REQUEST_LOG_USER_OUT\";\n\nexport const REQUEST_USER_SIGN_UP = \"@@auth/REQUEST_USER_SIGN_UP\";\nexport const REQUEST_USER_SIGN_UP_SUCCESS =\n  \"@@auth/REQUEST_USER_SIGN_UP_SUCCESS\";\nexport const REQUEST_USER_SIGN_UP_FAILURE =\n  \"@@auth/REQUEST_USER_SIGN_UP_FAILURE\";\n\nexport const FETCHING_USER_FROM_TOKEN = \"@@auth/FETCHING_USER_FROM_TOKEN\";\nexport const FETCHING_USER_FROM_TOKEN_SUCCESS =\n  \"@@auth/FETCHING_USER_FROM_TOKEN_SUCCESS\";\nexport const FETCHING_USER_FROM_TOKEN_FAILURE =\n  \"@@auth/FETCHING_USER_FROM_TOKEN_FAILURE\";\n\nexport default function authReducer(state = initialState.auth, action = {}) {\n  switch (action.type) {\n    case REQUEST_LOGIN:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case REQUEST_LOGIN_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.error,\n        user: {},\n      };\n    case REQUEST_LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        error: null,\n      };\n    case REQUEST_USER_SIGN_UP:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case REQUEST_USER_SIGN_UP_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        error: null,\n      };\n    case REQUEST_USER_SIGN_UP_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        isAuthenticated: false,\n        error: action.error,\n      };\n    case FETCHING_USER_FROM_TOKEN:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case FETCHING_USER_FROM_TOKEN_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        userLoaded: true,\n        isLoading: false,\n        user: action.data,\n      };\n    case FETCHING_USER_FROM_TOKEN_FAILURE:\n      return {\n        ...state,\n        isAuthenticated: false,\n        userLoaded: true,\n        isLoading: false,\n        error: action.error,\n        user: {},\n      };\n    case REQUEST_LOG_USER_OUT:\n      return {\n        ...initialState.auth,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const Actions = {};\n\nActions.requestUserLogin = ({ email, password }) => {\n  return (dispatch) =>\n    dispatch(\n      apiClient({\n        url:`/users/login/token/`,\n        method: `POST`,\n        types: {\n          REQUEST: REQUEST_USER_SIGN_UP,\n          SUCCESS: REQUEST_USER_SIGN_UP_SUCCESS,\n          FAILURE: REQUEST_USER_SIGN_UP_FAILURE,\n      },\n      options: {\n        data: { user: {email, password}},\n        params: {},\n      },\n      onSuccess: (res) => {\n        // esconde o access_token que o servidor retorna\n        const access_token = res?.data?.access_token?.access_token;\n        localStorage.setItem(\"access_token\", access_token);\n\n        return dispatch(Actions.fetchUserFromToken(access_token));\n      },\n      onFailure: (res) => ({\n        success: false,\n        status: res.status,\n        error: res.error,\n      }),\n    })\n  );\n};\n\nActions.registerNewUser = ({ username, email, password }) => {\n  return (dispatch) =>\n    dispatch(\n      apiClient({\n        url: `/users/`,\n        method: `POST`,\n        types: {\n          REQUEST: REQUEST_USER_SIGN_UP,\n          SUCCESS: REQUEST_USER_SIGN_UP_SUCCESS,\n          FAILURE: REQUEST_USER_SIGN_UP_FAILURE,\n        },\n        options: {\n          data: { new_user: { username, email, password } },\n          params: {},\n        },\n        onSuccess: (res) => {\n          // esconde o access_token que o servidor retorna\n          const access_token = res?.data?.access_token?.access_token;\n          localStorage.setItem(\"access_token\", access_token);\n\n          return dispatch(Actions.fetchUserFromToken(access_token));\n        },\n        onFailure: (res) => ({\n          success: false,\n          status: res.status,\n          error: res.error,\n        }),\n      })\n    );\n};\n\nActions.fetchUserFromToken = (access_token) => {\n  return async (dispatch) => {\n    dispatch({ type: FETCHING_USER_FROM_TOKEN });\n\n    const token = access_token\n      ? access_token\n      : localStorage.getItem(\"access_token\");\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    };\n\n    try {\n      const res = await axios({\n        method: `GET`,\n        url: `http://localhost:8000/api/users/me/`,\n        headers,\n      });\n      console.log(res);\n\n      return dispatch({\n        type: FETCHING_USER_FROM_TOKEN_SUCCESS,\n        data: res.data,\n      });\n    } catch (error) {\n      console.log(error);\n\n      return dispatch({\n        type: FETCHING_USER_FROM_TOKEN_FAILURE,\n        error: error.message,\n      });\n    }\n  };\n};\n\nActions.logUserOut = () => {\n  localStorage.removeItem(\"access_token\");\n\n  return {\n    type: REQUEST_LOG_USER_OUT,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}